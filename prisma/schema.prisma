generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id @default(uuid())
  oAuthId             String?       @unique
  email               String        @unique
  password            String?
  firstName           String?
  lastName            String?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime?     @updatedAt
  isAdmin             Boolean       @default(false)
  dashboards          Dashboard[]
  resetRequested      Boolean       @default(false)
  resetRequestedAt    DateTime?     
  resetApproved       Boolean       @default(false)
  resetApprovedById   String?
  deleteRequested     Boolean       @default(false)
  deleteRequestedAt   DateTime?
  deleteApproved      Boolean       @default(false)
  deleteApprovedById  String?
}

model Dashboard {
  id                  String        @id @default(uuid())
  name                String
  description         String?
  visibility          String[]
  permissions         String[]
  userId              String?
  user                User?         @relation(fields: [userId], references: [id])
  cards               Card[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  AppSettings         AppSettings[]
}

model Card {
  id                  String        @id @default(uuid())
  name                String
  url                 String
  imageUrl            String?
  dashboardId         String
  dashboard           Dashboard     @relation(fields: [dashboardId], references: [id], onDelete: Cascade)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model AppSettings {
  id                  String        @id @default(uuid())
  loginName           String?
  loginImgUrl         String?
  oAuthEnabled        Boolean       @default(false)
  oAuthRealm          String?
  oAuthClientId       String?
  oAuthClientSecret   String?
  oAuthUrl            String?
  landingEnabled      Boolean       @default(false)
  landingDashboardId  String?
  landingDashboard    Dashboard?    @relation(fields: [landingDashboardId], references: [id])
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Notifications {
  id                  String        @id @default(uuid())
  title               String
  message             String
  createdAt           DateTime      @default(now())
  readById            String[]
}
